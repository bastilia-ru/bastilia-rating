// <auto-generated />
using System;
using Bastilia.Rating.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bastilia.Rating.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AchievementId"));

                    b.Property<int>("AchievementTemplateId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<int>("GrantedBy")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("GrantedDate")
                        .HasColumnType("date");

                    b.Property<string>("OverrideName")
                        .HasColumnType("text");

                    b.Property<int?>("RemovedBy")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("RemovedDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("AchievementId");

                    b.HasIndex("AchievementTemplateId");

                    b.HasIndex("GrantedBy");

                    b.HasIndex("RemovedBy");

                    b.HasIndex("UserId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.AchievementTemplate", b =>
                {
                    b.Property<int>("AchievementTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AchievementTemplateId"));

                    b.Property<string>("AchievementDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AchievementImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AchievementName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AchievementRatingValue")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("AchievementTemplateId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("AchievementTemplates");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.BastiliaProject", b =>
                {
                    b.Property<int>("BastiliaProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BastiliaProjectId"));

                    b.Property<string>("BrandType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("OngoingProject")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PlannedStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("ProjectOfTheYear")
                        .HasColumnType("boolean");

                    b.Property<string>("ProjectType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BastiliaProjectId");

                    b.ToTable("BastiliaProjects");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.ProjectAdmin", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("AddDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("RemoveDate")
                        .HasColumnType("date");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectAdmins");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.User", b =>
                {
                    b.Property<int>("JoinRpgUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JoinRpgUserId"));

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ParticipateInRating")
                        .HasColumnType("boolean");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("JoinRpgUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.UsersBastiliaStatus", b =>
                {
                    b.Property<int>("JoinrpgUserId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("BeginDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("StatusType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("JoinrpgUserId", "BeginDate");

                    b.ToTable("UsersBastiliaStatuses");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.Achievement", b =>
                {
                    b.HasOne("Bastilia.Rating.Database.Entities.AchievementTemplate", "Template")
                        .WithMany("Achievements")
                        .HasForeignKey("AchievementTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bastilia.Rating.Database.Entities.User", "GrantedByUser")
                        .WithMany()
                        .HasForeignKey("GrantedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bastilia.Rating.Database.Entities.User", "RemovedByUser")
                        .WithMany()
                        .HasForeignKey("RemovedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bastilia.Rating.Database.Entities.User", "User")
                        .WithMany("Achievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrantedByUser");

                    b.Navigation("RemovedByUser");

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.AchievementTemplate", b =>
                {
                    b.HasOne("Bastilia.Rating.Database.Entities.User", "Owner")
                        .WithMany("OwnedAchievementTemplates")
                        .HasForeignKey("OwnerId");

                    b.HasOne("Bastilia.Rating.Database.Entities.BastiliaProject", "Project")
                        .WithMany("AchievementTemplates")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Owner");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.ProjectAdmin", b =>
                {
                    b.HasOne("Bastilia.Rating.Database.Entities.BastiliaProject", "Project")
                        .WithMany("ProjectAdmins")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bastilia.Rating.Database.Entities.User", "User")
                        .WithMany("ProjectAdmins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.UsersBastiliaStatus", b =>
                {
                    b.HasOne("Bastilia.Rating.Database.Entities.User", "User")
                        .WithMany("BastiliaStatuses")
                        .HasForeignKey("JoinrpgUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.AchievementTemplate", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.BastiliaProject", b =>
                {
                    b.Navigation("AchievementTemplates");

                    b.Navigation("ProjectAdmins");
                });

            modelBuilder.Entity("Bastilia.Rating.Database.Entities.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("BastiliaStatuses");

                    b.Navigation("OwnedAchievementTemplates");

                    b.Navigation("ProjectAdmins");
                });
#pragma warning restore 612, 618
        }
    }
}
