@page "/project/{projectId}"
@using Bastilia.Rating.Portal.Components.BastiliaUsers
@using Microsoft.AspNetCore.Components.QuickGrid

@inject IBastiliaProjectRepository Repository
@inject NavigationManager NavigationManager
<PageTitle>Проект @project?.ProjectName</PageTitle>
@if (project is null)
{
    <LoadingSpinner />
    return;
}
<ProjectCard Project="project" />
@if (project.ProjectMemberAchievements.Count > 0)
{
    var activePma = project.ProjectMemberAchievements.Where(p => !p.IsExpired).ToList();
    var expiredPma = project.ProjectMemberAchievements.Where(p => p.IsExpired).ToList();
    if(activePma.Count == 0 || expiredPma.Count == 0)
    {
        <h2>Достижения</h2>
        foreach (var pma in project.ProjectMemberAchievements)
        {
            <div class="col-md-6">
                <ProjectAchievementCard Achievement="pma" />
            </div>
        }
    }
    else {
            <h2>Участники</h2>
            foreach (var pma in activePma)
            {
                <div class="col-md-6">
                    <ProjectAchievementCard Achievement="pma" />
                </div>
            }
    
            <h2>Былые достижения</h2>
            foreach (var pma in expiredPma)
            {
                <div class="col-md-6">
                    <ProjectAchievementCard Achievement="pma" />
                </div>
            }
    }
}

@code {
    [Parameter]
    public string? ProjectId { get; set; }

    private BastiliaProjectWithDetails? project;

    protected override async Task OnParametersSetAsync()
    {
        if (int.TryParse(ProjectId, out var projectId))
        {
            project = await Repository.GetByIdAsync(projectId);
        }
        else
        {
            project = await Repository.GetBySlugAsync(ProjectId);
        }

        if (project is null)
        {
            NavigationManager.NavigateTo("/404");
        }
    }
}
