@page "/project/{projectId}"
@using Bastilia.Rating.Portal.Components.BastiliaUsers
@using Microsoft.AspNetCore.Components.QuickGrid

@inject IBastiliaProjectRepository Repository
@inject NavigationManager NavigationManager
<PageTitle>Проект @project?.ProjectName</PageTitle>
@if (project is null)
{
    <LoadingSpinner />
    return;
}
<ProjectCard Project="project" />
@if (project.ProjectMemberAchievements.Count > 0)
{
    var activePma = project.ProjectMemberAchievements.Where(p => !p.IsExpired).ToList();
    var expiredPma = project.ProjectMemberAchievements.Where(p => p.IsExpired).ToList();
    if(activePma.Count == 0 || expiredPma.Count == 0)
    {
        <h2>Достижения</h2>
        <div style="display: flex; flex-flow: row wrap" >
            @foreach (var pma in project.ProjectMemberAchievements.OrderByDescending(x => x.RatingValue))
            {
                    <AchievementCard Achievement="pma" ShowAsProject="true"/>
            }
        </div>
    }
    else {
            <h2>Участники</h2>
            <div style="display: flex; flex-flow: row wrap" >
            @foreach (var pma in activePma.OrderByDescending(x => x.RatingValue))
            {
                <AchievementCard Achievement="pma" ShowAsProject="true" />
            }
            </div>
    
            <h2>Былые достижения</h2>
            <div style="display: flex; flex-flow: row wrap" >
            @foreach (var pma in expiredPma.OrderByDescending(x => x.RatingValue))
            {
                <AchievementCard Achievement="pma" ShowAsProject="true" />
            }
            </div>
    }
}

@code {
    [Parameter]
    public string ProjectId { get; set; } = null!;

    private BastiliaProjectWithDetails? project;

    protected override async Task OnParametersSetAsync()
    {
        if (int.TryParse(ProjectId, out var projectId))
        {
            project = await Repository.GetByIdAsync(projectId);
        }
        else
        {
            project = await Repository.GetBySlugAsync(ProjectId);
        }

        if (project is null)
        {
            NavigationManager.NavigateTo("/404");
        }
    }
}
